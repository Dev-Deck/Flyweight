<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="_vector2_int_8cpp" kind="file" language="C++">
    <compoundname>Vector2Int.cpp</compoundname>
    <includes refid="_vector2_int_8h" local="yes">Vector2Int.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/Vector2Int.cpp</label>
        <link refid="_vector2_int_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Vector2Int.h</label>
        <link refid="_vector2_int_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdexcept</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vector2_int_8h" kindref="compound">Vector2Int.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="struct_vector2_int_1a56b72e4031645f00febf334adce5a77d" refkind="member"><highlight class="normal"><ref refid="struct_vector2_int_1a56b72e4031645f00febf334adce5a77d" kindref="member">Vector2Int::Vector2Int</ref>()<sp/>:<sp/>x(0),<sp/>y(0)<sp/>{}</highlight></codeline>
<codeline lineno="4" refid="struct_vector2_int_1a38b3a94e64a08a94a0197e87ffc87a83" refkind="member"><highlight class="normal"><ref refid="struct_vector2_int_1a56b72e4031645f00febf334adce5a77d" kindref="member">Vector2Int::Vector2Int</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>:<sp/>x(x),<sp/>y(y)<sp/>{}</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/><ref refid="struct_vector2_int_1a2ee6d471baa7a6ba0e70ae11098491cf" kindref="member">Vector2Int::Up</ref><sp/>=<sp/>{<sp/>0,<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/><ref refid="struct_vector2_int_1a7cac0ab70292eaa33d1aaf634d7c9141" kindref="member">Vector2Int::Down</ref><sp/>=<sp/>{<sp/>0,<sp/>-1<sp/>};</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/><ref refid="struct_vector2_int_1a087472c234c9b548ed191ee0d60d22a1" kindref="member">Vector2Int::Left</ref><sp/>=<sp/>{<sp/>-1,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/><ref refid="struct_vector2_int_1a9c96b9c5aab40bf6c06f7d82aa87b3c1" kindref="member">Vector2Int::Right</ref><sp/>=<sp/>{<sp/>1,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/><ref refid="struct_vector2_int_1a47e1fa2c4d20433493421c8e6b393d55" kindref="member">Vector2Int::Zero</ref><sp/>=<sp/>{<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Vector2Int&gt;<sp/><ref refid="struct_vector2_int_1a4f216ccc717da30962930d18f5d7ff60" kindref="member">Vector2Int::Directions</ref><sp/>=<sp/>{<sp/>Up,<sp/>Down,<sp/>Left,<sp/>Right<sp/>};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="struct_vector2_int_1a1ff8f0a7dfc5671cde00c238ec1f8132" refkind="member"><highlight class="normal"><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/><ref refid="struct_vector2_int_1a1ff8f0a7dfc5671cde00c238ec1f8132" kindref="member">Vector2Int::Sum</ref>(<ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/>vec1,<sp/><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/>vec2)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">vec1</ref>.<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">x</ref><sp/>+<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">vec2</ref>.x,<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">vec1</ref>.y<sp/>+<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">vec2</ref>.y<sp/>};</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="struct_vector2_int_1a1bd4a637f718f5324530a06eeb6648ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int_1a1bd4a637f718f5324530a06eeb6648ae" kindref="member">Vector2Int::Distance</ref>(<ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/>vec1,<sp/><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/>vec2)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">dx</ref><sp/>=<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">vec1</ref>.x<sp/>-<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">vec2</ref>.x;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">dy</ref><sp/>=<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">vec1</ref>.y<sp/>-<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">vec2</ref>.y;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">distance</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">sqrt</ref>(<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">pow</ref>(<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">dx</ref>,<sp/>2)<sp/>+<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">pow</ref>(<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">dy</ref>,<sp/>2))<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">distance</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="struct_vector2_int_1a30bceb27193e5742ebbd3bbef61528d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int_1a30bceb27193e5742ebbd3bbef61528d0" kindref="member">Vector2Int::operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="28"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">x</ref><sp/>&lt;<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.x)<sp/>||<sp/>(<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">x</ref><sp/>==<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.x<sp/>&amp;&amp;<sp/><ref refid="struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839" kindref="member">y</ref><sp/>&lt;<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.y);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="struct_vector2_int_1a17576daf4474e5e9c90581dccedfbab0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int_1a17576daf4474e5e9c90581dccedfbab0" kindref="member">Vector2Int::ManhattanDistance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="33"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::abs(<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">x</ref><sp/>-<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.x)<sp/>+<sp/>std::abs(<ref refid="struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839" kindref="member">y</ref><sp/>-<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.y);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="struct_vector2_int_1a03816fc993bf82130d2941990f9d7ef6" refkind="member"><highlight class="normal"><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/><ref refid="struct_vector2_int_1a03816fc993bf82130d2941990f9d7ef6" kindref="member">Vector2Int::operator-</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="38"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/>-<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">x</ref>,<sp/>-<ref refid="struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839" kindref="member">y</ref><sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="struct_vector2_int_1af4140f0a21bfd68be482c1b1382b2d0c" refkind="member"><highlight class="normal"><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/><ref refid="struct_vector2_int_1a03816fc993bf82130d2941990f9d7ef6" kindref="member">Vector2Int::operator-</ref>(<ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="43"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">x</ref><sp/>-<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">x</ref>,<sp/><ref refid="struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839" kindref="member">y</ref><sp/>-<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.y<sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="struct_vector2_int_1ab08cdb91427892ffa2854e8d09114cdb" refkind="member"><highlight class="normal"><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/><ref refid="struct_vector2_int_1ab08cdb91427892ffa2854e8d09114cdb" kindref="member">Vector2Int::operator+</ref>(<ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="48"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">x</ref><sp/>+<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">x</ref>,<sp/><ref refid="struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839" kindref="member">y</ref><sp/>+<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.y<sp/>};</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="struct_vector2_int_1a805e463e26682c870374fe8c4348bd5b" refkind="member"><highlight class="normal"><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/><ref refid="struct_vector2_int_1a805e463e26682c870374fe8c4348bd5b" kindref="member">Vector2Int::operator/</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scalar)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="53"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">scalar</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Division<sp/>by<sp/>0<sp/>on<sp/>a<sp/>Vector2Int/scalar.<sp/>Check<sp/>that<sp/>the<sp/>scalar<sp/>is<sp/>not<sp/>0.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int_1a56b72e4031645f00febf334adce5a77d" kindref="member">Vector2Int</ref>(<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">x</ref>/<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">scalar</ref>,<sp/><ref refid="struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839" kindref="member">y</ref>/<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">scalar</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="struct_vector2_int_1a3acb9c9c38ec9f7ded2f62d8ca5eb7f0" refkind="member"><highlight class="normal"><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/><ref refid="struct_vector2_int_1a805e463e26682c870374fe8c4348bd5b" kindref="member">Vector2Int::operator/</ref>(<ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="60"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.x<sp/>==<sp/>0<sp/>||<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.y<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Division<sp/>by<sp/>0<sp/>on<sp/>a<sp/>Vector2Int/Vecto2Int.<sp/>Check<sp/>that<sp/>the<sp/>divisor<sp/>does<sp/>not<sp/>have<sp/>0<sp/>values.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">x</ref><sp/>/<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.x,<sp/><ref refid="struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839" kindref="member">y</ref><sp/>/<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.y<sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="struct_vector2_int_1af948d9748afc6d6288e19ffcef7ef8cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int_1af948d9748afc6d6288e19ffcef7ef8cf" kindref="member">Vector2Int::operator==</ref>(<ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="67"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">x</ref><sp/>==<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.x<sp/>&amp;&amp;<sp/><ref refid="struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839" kindref="member">y</ref><sp/>==<sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">other</ref>.y;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="struct_vector2_int_1af9b55a021fe82cdee19a5736d0e0478c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int_1af9b55a021fe82cdee19a5736d0e0478c" kindref="member">Vector2Int::Move</ref>(<ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref><sp/>direction)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">x</ref><sp/>+=<sp/>direction.<ref refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839" kindref="member">y</ref><sp/>+=<sp/>direction.<ref refid="struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="struct_vector2_int_hash_1a76f74e97ef8299ca9c0d49dfed0b5ba4" refkind="member"><highlight class="normal">std::size_t<sp/><ref refid="struct_vector2_int_hash_1a76f74e97ef8299ca9c0d49dfed0b5ba4" kindref="member">Vector2IntHash::operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref>&amp;<sp/>v)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hash&lt;int&gt;()(v.x)<sp/>^<sp/>(std::hash&lt;int&gt;()(v.y)<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/Vector2Int.cpp"/>
  </compounddef>
</doxygen>
