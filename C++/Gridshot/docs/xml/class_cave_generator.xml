<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_cave_generator" kind="class" language="C++" prot="public">
    <compoundname>CaveGenerator</compoundname>
    <includes refid="_cave_generator_8h" local="no">CaveGenerator.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_cave_generator_1ac4dc80f68c6568d598d84451eec03b3c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; std::vector&lt; std::vector&lt; bool &gt; &gt; &gt;</type>
        <definition>std::shared_ptr&lt;std::vector&lt;std::vector&lt;bool&gt; &gt; &gt; CaveGenerator::cave</definition>
        <argsstring></argsstring>
        <name>cave</name>
        <qualifiedname>CaveGenerator::cave</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="13" column="17" bodyfile="src/CaveGenerator.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cave_generator_1a3f8d4110a9b055d42fc4b50a01400422" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float CaveGenerator::fillProbability</definition>
        <argsstring></argsstring>
        <name>fillProbability</name>
        <qualifiedname>CaveGenerator::fillProbability</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="15" column="7" bodyfile="src/CaveGenerator.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cave_generator_1ad4463ad5481a78ae731d43306a205aa3" prot="private" static="no" mutable="no">
        <type><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref></type>
        <definition>Vector2Int CaveGenerator::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <qualifiedname>CaveGenerator::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="16" column="12" bodyfile="src/CaveGenerator.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cave_generator_1a571eff452cef1b39645e00fa1031aef1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref> &gt;</type>
        <definition>std::vector&lt;Vector2Int&gt; CaveGenerator::emptySpaces</definition>
        <argsstring></argsstring>
        <name>emptySpaces</name>
        <qualifiedname>CaveGenerator::emptySpaces</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="17" column="13" bodyfile="src/CaveGenerator.h" bodystart="17" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_cave_generator_1a1975885346d564d30e6f38e2e80b65f8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CaveGenerator::CaveIteration</definition>
        <argsstring>()</argsstring>
        <name>CaveIteration</name>
        <qualifiedname>CaveGenerator::CaveIteration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="19" column="6" bodyfile="src/CaveGenerator.cpp" bodystart="44" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_cave_generator_1a688a2b19ac11b08c7a40d48a74ee8dd2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CaveGenerator::GenerateInitialCave</definition>
        <argsstring>()</argsstring>
        <name>GenerateInitialCave</name>
        <qualifiedname>CaveGenerator::GenerateInitialCave</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="20" column="6" bodyfile="src/CaveGenerator.cpp" bodystart="13" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_cave_generator_1a639a19bcea09e2fd010aa67ace60825b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CaveGenerator::CountSolidNeighbors</definition>
        <argsstring>(const int x, const int y) const</argsstring>
        <name>CountSolidNeighbors</name>
        <qualifiedname>CaveGenerator::CountSolidNeighbors</qualifiedname>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="21" column="5" bodyfile="src/CaveGenerator.cpp" bodystart="25" bodyend="42"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_cave_generator_1a60055189325dc20fb431602ad00dcca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CaveGenerator::CaveGenerator</definition>
        <argsstring>(Vector2Int size, float fillProbability)</argsstring>
        <name>CaveGenerator</name>
        <qualifiedname>CaveGenerator::CaveGenerator</qualifiedname>
        <param>
          <type><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fillProbability</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="24" column="1" bodyfile="src/CaveGenerator.cpp" bodystart="3" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="class_cave_generator_1a9c0e8ee97f7cd1aea6045d765e20f7a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CaveGenerator::GenerateCave</definition>
        <argsstring>(const int iterations, const Vector2Int *size, const float *fillProbability)</argsstring>
        <name>GenerateCave</name>
        <qualifiedname>CaveGenerator::GenerateCave</qualifiedname>
        <param>
          <type>const int</type>
          <declname>iterations</declname>
        </param>
        <param>
          <type>const <ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref> *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>fillProbability</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="26" column="6" bodyfile="src/CaveGenerator.cpp" bodystart="63" bodyend="73"/>
        <referencedby refid="class_game_field_1ab7c0e031d305f8045ed799ebd076a8aa" compoundref="_game_field_8cpp" startline="3" endline="67">GameField::GameField</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cave_generator_1a23b75da31cea10356121e1d8bd74361d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; std::vector&lt; std::vector&lt; bool &gt; &gt; &gt;</type>
        <definition>std::shared_ptr&lt; std::vector&lt; std::vector&lt; bool &gt; &gt; &gt; CaveGenerator::GetCave</definition>
        <argsstring>() const</argsstring>
        <name>GetCave</name>
        <qualifiedname>CaveGenerator::GetCave</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="28" column="17" bodyfile="src/CaveGenerator.cpp" bodystart="11" bodyend="11"/>
        <referencedby refid="class_game_field_1ab1ae41b1c419a854da2cc174bd3a08c3" compoundref="_game_field_8cpp" startline="275" endline="280">GameField::AddFieldObject</referencedby>
        <referencedby refid="class_game_field_1a272fd6987bd0cffcddff9c376881d765" compoundref="_game_field_8cpp" startline="106" endline="210">GameField::Draw</referencedby>
        <referencedby refid="class_game_field_1ad963bd86308288dc9f11c906b294d2ed" compoundref="_game_field_8cpp" startline="69" endline="75">GameField::Init</referencedby>
        <referencedby refid="class_game_field_1a7417ea928ae030016e57caa6376a5d90" compoundref="_game_field_8cpp" startline="77" endline="104">GameField::Tick</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cave_generator_1adbb1a2d432e9826ce817a2d5d44eb72d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref></type>
        <definition>Vector2Int CaveGenerator::GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <qualifiedname>CaveGenerator::GetSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="29" column="12" bodyfile="src/CaveGenerator.cpp" bodystart="9" bodyend="9"/>
        <referencedby refid="class_game_field_1a272fd6987bd0cffcddff9c376881d765" compoundref="_game_field_8cpp" startline="106" endline="210">GameField::Draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cave_generator_1a0473c07481e181db71a9f98946130bb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CaveGenerator::GetEmptySpaces</definition>
        <argsstring>() const</argsstring>
        <name>GetEmptySpaces</name>
        <qualifiedname>CaveGenerator::GetEmptySpaces</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="30" column="5" bodyfile="src/CaveGenerator.cpp" bodystart="10" bodyend="10"/>
        <referencedby refid="class_game_field_1ab7c0e031d305f8045ed799ebd076a8aa" compoundref="_game_field_8cpp" startline="3" endline="67">GameField::GameField</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cave_generator_1a5f8ada5348f66c031890f058657ce439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref></type>
        <definition>Vector2Int CaveGenerator::GetRandomEmptySpace</definition>
        <argsstring>()</argsstring>
        <name>GetRandomEmptySpace</name>
        <qualifiedname>CaveGenerator::GetRandomEmptySpace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="31" column="12" bodyfile="src/CaveGenerator.cpp" bodystart="75" bodyend="82"/>
        <references refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" compoundref="_vector2_int_8h" startline="8">Vector2Int::x</references>
        <references refid="struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839" compoundref="_vector2_int_8h" startline="9">Vector2Int::y</references>
        <referencedby refid="class_game_field_1ab7c0e031d305f8045ed799ebd076a8aa" compoundref="_game_field_8cpp" startline="3" endline="67">GameField::GameField</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cave_generator_1a5f9b37566f09c125e37f9ee83012b743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref></type>
        <definition>Vector2Int CaveGenerator::GetEnemySpace</definition>
        <argsstring>(const Vector2Int fromPosition, const int minDistance)</argsstring>
        <name>GetEnemySpace</name>
        <qualifiedname>CaveGenerator::GetEnemySpace</qualifiedname>
        <param>
          <type>const <ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref></type>
          <declname>fromPosition</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>minDistance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="32" column="12" bodyfile="src/CaveGenerator.cpp" bodystart="84" bodyend="89"/>
        <references refid="class_cave_generator_1a4692bbcd7cdef1c41c06f00a65f2bdb6" compoundref="_cave_generator_8cpp" startline="91" endline="110">GetRandomDistantEmptySpace</references>
        <references refid="struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657" compoundref="_vector2_int_8h" startline="8">Vector2Int::x</references>
        <references refid="struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839" compoundref="_vector2_int_8h" startline="9">Vector2Int::y</references>
        <referencedby refid="class_game_field_1ab7c0e031d305f8045ed799ebd076a8aa" compoundref="_game_field_8cpp" startline="3" endline="67">GameField::GameField</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cave_generator_1a4692bbcd7cdef1c41c06f00a65f2bdb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref></type>
        <definition>Vector2Int CaveGenerator::GetRandomDistantEmptySpace</definition>
        <argsstring>(const Vector2Int fromPosition, const int minDistance)</argsstring>
        <name>GetRandomDistantEmptySpace</name>
        <qualifiedname>CaveGenerator::GetRandomDistantEmptySpace</qualifiedname>
        <param>
          <type>const <ref refid="struct_vector2_int" kindref="compound">Vector2Int</ref></type>
          <declname>fromPosition</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>minDistance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CaveGenerator.h" line="33" column="12" bodyfile="src/CaveGenerator.cpp" bodystart="91" bodyend="110"/>
        <references refid="struct_vector2_int_1a1bd4a637f718f5324530a06eeb6648ae" compoundref="_vector2_int_8cpp" startline="18" endline="25">Vector2Int::Distance</references>
        <references refid="struct_vector2_int_1a47e1fa2c4d20433493421c8e6b393d55" compoundref="_vector2_int_8h" startline="10" endline="10">Vector2Int::Zero</references>
        <referencedby refid="class_game_field_1ab7c0e031d305f8045ed799ebd076a8aa" compoundref="_game_field_8cpp" startline="3" endline="67">GameField::GameField</referencedby>
        <referencedby refid="class_cave_generator_1a5f9b37566f09c125e37f9ee83012b743" compoundref="_cave_generator_8cpp" startline="84" endline="89">GetEnemySpace</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>CaveGenerator</label>
        <link refid="class_cave_generator"/>
      </node>
    </collaborationgraph>
    <location file="src/CaveGenerator.h" line="10" column="1" bodyfile="src/CaveGenerator.h" bodystart="11" bodyend="34"/>
    <listofallmembers>
      <member refid="class_cave_generator_1ac4dc80f68c6568d598d84451eec03b3c" prot="private" virt="non-virtual"><scope>CaveGenerator</scope><name>cave</name></member>
      <member refid="class_cave_generator_1a60055189325dc20fb431602ad00dcca2" prot="public" virt="non-virtual"><scope>CaveGenerator</scope><name>CaveGenerator</name></member>
      <member refid="class_cave_generator_1a1975885346d564d30e6f38e2e80b65f8" prot="private" virt="non-virtual"><scope>CaveGenerator</scope><name>CaveIteration</name></member>
      <member refid="class_cave_generator_1a639a19bcea09e2fd010aa67ace60825b" prot="private" virt="non-virtual"><scope>CaveGenerator</scope><name>CountSolidNeighbors</name></member>
      <member refid="class_cave_generator_1a571eff452cef1b39645e00fa1031aef1" prot="private" virt="non-virtual"><scope>CaveGenerator</scope><name>emptySpaces</name></member>
      <member refid="class_cave_generator_1a3f8d4110a9b055d42fc4b50a01400422" prot="private" virt="non-virtual"><scope>CaveGenerator</scope><name>fillProbability</name></member>
      <member refid="class_cave_generator_1a9c0e8ee97f7cd1aea6045d765e20f7a8" prot="public" virt="non-virtual"><scope>CaveGenerator</scope><name>GenerateCave</name></member>
      <member refid="class_cave_generator_1a688a2b19ac11b08c7a40d48a74ee8dd2" prot="private" virt="non-virtual"><scope>CaveGenerator</scope><name>GenerateInitialCave</name></member>
      <member refid="class_cave_generator_1a23b75da31cea10356121e1d8bd74361d" prot="public" virt="non-virtual"><scope>CaveGenerator</scope><name>GetCave</name></member>
      <member refid="class_cave_generator_1a0473c07481e181db71a9f98946130bb1" prot="public" virt="non-virtual"><scope>CaveGenerator</scope><name>GetEmptySpaces</name></member>
      <member refid="class_cave_generator_1a5f9b37566f09c125e37f9ee83012b743" prot="public" virt="non-virtual"><scope>CaveGenerator</scope><name>GetEnemySpace</name></member>
      <member refid="class_cave_generator_1a4692bbcd7cdef1c41c06f00a65f2bdb6" prot="public" virt="non-virtual"><scope>CaveGenerator</scope><name>GetRandomDistantEmptySpace</name></member>
      <member refid="class_cave_generator_1a5f8ada5348f66c031890f058657ce439" prot="public" virt="non-virtual"><scope>CaveGenerator</scope><name>GetRandomEmptySpace</name></member>
      <member refid="class_cave_generator_1adbb1a2d432e9826ce817a2d5d44eb72d" prot="public" virt="non-virtual"><scope>CaveGenerator</scope><name>GetSize</name></member>
      <member refid="class_cave_generator_1ad4463ad5481a78ae731d43306a205aa3" prot="private" virt="non-virtual"><scope>CaveGenerator</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
