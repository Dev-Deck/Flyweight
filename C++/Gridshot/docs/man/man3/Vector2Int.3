.TH "Vector2Int" 3 "Version 0.0.1" "Gridshot" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Vector2Int
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <Vector2Int\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVector2Int\fP ()"
.br
.ti -1c
.RI "\fBVector2Int\fP (\fBint\fP \fBx\fP, \fBint\fP \fBy\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBMove\fP (\fBVector2Int\fP direction)"
.br
.ti -1c
.RI "\fBVector2Int\fP \fBoperator\-\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBVector2Int\fP \fBoperator\-\fP (\fBVector2Int\fP \fBother\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBVector2Int\fP \fBoperator/\fP (\fBint\fP \fBscalar\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBVector2Int\fP \fBoperator+\fP (\fBVector2Int\fP \fBother\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBVector2Int\fP \fBoperator/\fP (\fBVector2Int\fP \fBother\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator==\fP (\fBVector2Int\fP \fBother\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator<\fP (\fBconst\fP \fBVector2Int\fP \fBother\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBint\fP \fBManhattanDistance\fP (\fBconst\fP \fBVector2Int\fP \fBother\fP) \fBconst\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "\fBstatic\fP \fBVector2Int\fP \fBSum\fP (\fBVector2Int\fP \fBvec1\fP, \fBVector2Int\fP \fBvec2\fP)"
.br
.ti -1c
.RI "\fBstatic\fP \fBint\fP \fBDistance\fP (\fBVector2Int\fP \fBvec1\fP, \fBVector2Int\fP \fBvec2\fP)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "int \fBx\fP"
.br
.ti -1c
.RI "\fBint\fP \fBy\fP"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "\fBstatic\fP \fBVector2Int\fP \fBconst\fP \fBUp\fP = { 0, 1 }"
.br
.ti -1c
.RI "\fBstatic\fP \fBVector2Int\fP \fBconst\fP \fBDown\fP = { 0, \-1 }"
.br
.ti -1c
.RI "\fBstatic\fP \fBVector2Int\fP \fBconst\fP \fBLeft\fP = { \-1, 0 }"
.br
.ti -1c
.RI "\fBstatic\fP \fBVector2Int\fP \fBconst\fP \fBRight\fP = { 1, 0 }"
.br
.ti -1c
.RI "\fBstatic\fP \fBVector2Int\fP \fBconst\fP \fBZero\fP = { 0, 0 }"
.br
.ti -1c
.RI "\fBstatic\fP std::vector< \fBVector2Int\fP > \fBconst\fP \fBDirections\fP = { \fBUp\fP, \fBDown\fP, \fBLeft\fP, \fBRight\fP }"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Vector2Int::Vector2Int ()"

.SS "Vector2Int::Vector2Int (\fBint\fP x, \fBint\fP y)"

.SH "Member Function Documentation"
.PP 
.SS "\fBint\fP Vector2Int::Distance (\fBVector2Int\fP vec1, \fBVector2Int\fP vec2)\fR [static]\fP"

.SS "\fBint\fP Vector2Int::ManhattanDistance (\fBconst\fP \fBVector2Int\fP other) const"

.SS "\fBvoid\fP Vector2Int::Move (\fBVector2Int\fP direction)"

.SS "\fBVector2Int\fP \fBVector2Int::operator\fP+ (\fBVector2Int\fP other) const"

.SS "\fBVector2Int\fP \fBVector2Int::operator\fP\- () const"

.SS "\fBVector2Int\fP \fBVector2Int::operator\fP\- (\fBVector2Int\fP other) const"

.SS "\fBVector2Int\fP \fBVector2Int::operator\fP/ (\fBint\fP scalar) const"

.SS "\fBVector2Int\fP \fBVector2Int::operator\fP/ (\fBVector2Int\fP other) const"

.SS "\fBbool\fP \fBVector2Int::operator\fP< (\fBconst\fP \fBVector2Int\fP other) const"

.SS "\fBbool\fP \fBVector2Int::operator\fP== (\fBVector2Int\fP other) const"

.SS "\fBVector2Int\fP Vector2Int::Sum (\fBVector2Int\fP vec1, \fBVector2Int\fP vec2)\fR [static]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBconst\fP std::vector< \fBVector2Int\fP > Vector2Int::Directions = { \fBUp\fP, \fBDown\fP, \fBLeft\fP, \fBRight\fP }\fR [static]\fP"

.SS "\fBconst\fP \fBVector2Int\fP Vector2Int::Down = { 0, \-1 }\fR [static]\fP"

.SS "\fBconst\fP \fBVector2Int\fP Vector2Int::Left = { \-1, 0 }\fR [static]\fP"

.SS "\fBconst\fP \fBVector2Int\fP Vector2Int::Right = { 1, 0 }\fR [static]\fP"

.SS "\fBconst\fP \fBVector2Int\fP Vector2Int::Up = { 0, 1 }\fR [static]\fP"

.SS "int Vector2Int::x"

.SS "\fBint\fP Vector2Int::y"

.SS "\fBconst\fP \fBVector2Int\fP Vector2Int::Zero = { 0, 0 }\fR [static]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Gridshot from the source code\&.
