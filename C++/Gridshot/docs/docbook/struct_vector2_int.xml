<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_vector2_int" xml:lang="en-US">
<title>Vector2Int Struct Reference</title>
<indexterm><primary>Vector2Int</primary></indexterm>
<para>
<computeroutput>#include &lt;Vector2Int.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_vector2_int_1a56b72e4031645f00febf334adce5a77d">Vector2Int</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int_1a38b3a94e64a08a94a0197e87ffc87a83">Vector2Int</link> (<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">x</link>, <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">int</link> <link linkend="_struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839">y</link>)</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">void</link> <link linkend="_struct_vector2_int_1af9b55a021fe82cdee19a5736d0e0478c">Move</link> (<link linkend="_struct_vector2_int">Vector2Int</link> direction)</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1a03816fc993bf82130d2941990f9d7ef6">operator-</link> () <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1af4140f0a21bfd68be482c1b1382b2d0c">operator-</link> (<link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">other</link>) <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1a805e463e26682c870374fe8c4348bd5b">operator/</link> (<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">scalar</link>) <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ab08cdb91427892ffa2854e8d09114cdb">operator+</link> (<link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">other</link>) <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1a3acb9c9c38ec9f7ded2f62d8ca5eb7f0">operator/</link> (<link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">other</link>) <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">bool</link> <link linkend="_struct_vector2_int_1af948d9748afc6d6288e19ffcef7ef8cf">operator==</link> (<link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">other</link>) <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">bool</link> <link linkend="_struct_vector2_int_1a30bceb27193e5742ebbd3bbef61528d0">operator&lt;</link> (<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">other</link>) <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link></para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">int</link> <link linkend="_struct_vector2_int_1a17576daf4474e5e9c90581dccedfbab0">ManhattanDistance</link> (<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">other</link>) <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">static</link> <link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1a1ff8f0a7dfc5671cde00c238ec1f8132">Sum</link> (<link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">vec1</link>, <link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">vec2</link>)</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">static</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">int</link> <link linkend="_struct_vector2_int_1a1bd4a637f718f5324530a06eeb6648ae">Distance</link> (<link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">vec1</link>, <link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">vec2</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">x</link></para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">int</link> <link linkend="_struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839">y</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">static</link> <link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int_1a2ee6d471baa7a6ba0e70ae11098491cf">Up</link> = { 0, 1 }</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">static</link> <link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int_1a7cac0ab70292eaa33d1aaf634d7c9141">Down</link> = { 0, -1 }</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">static</link> <link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int_1a087472c234c9b548ed191ee0d60d22a1">Left</link> = { -1, 0 }</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">static</link> <link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int_1a9c96b9c5aab40bf6c06f7d82aa87b3c1">Right</link> = { 1, 0 }</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">static</link> <link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int_1a47e1fa2c4d20433493421c8e6b393d55">Zero</link> = { 0, 0 }</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">static</link> std::vector&lt; <link linkend="_struct_vector2_int">Vector2Int</link> &gt; <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int_1a4f216ccc717da30962930d18f5d7ff60">Directions</link> = { <link linkend="_struct_vector2_int_1a2ee6d471baa7a6ba0e70ae11098491cf">Up</link>, <link linkend="_struct_vector2_int_1a7cac0ab70292eaa33d1aaf634d7c9141">Down</link>, <link linkend="_struct_vector2_int_1a087472c234c9b548ed191ee0d60d22a1">Left</link>, <link linkend="_struct_vector2_int_1a9c96b9c5aab40bf6c06f7d82aa87b3c1">Right</link> }</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_vector2_int_1a56b72e4031645f00febf334adce5a77d"/><section>
    <title>Vector2Int()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Vector2Int</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>Vector2Int</secondary></indexterm>
<para><computeroutput>Vector2Int::Vector2Int ( )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_vector2_int_a56b72e4031645f00febf334adce5a77d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_vector2_int_1a38b3a94e64a08a94a0197e87ffc87a83"/><section>
    <title>Vector2Int()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Vector2Int</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>Vector2Int</secondary></indexterm>
<para><computeroutput>Vector2Int::Vector2Int (<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">int</link> x, <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">int</link> y)</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_vector2_int_1a1bd4a637f718f5324530a06eeb6648ae"/><section>
    <title>Distance()</title>
<indexterm><primary>Distance</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>Distance</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">int</link> Vector2Int::Distance (<link linkend="_struct_vector2_int">Vector2Int</link> vec1, <link linkend="_struct_vector2_int">Vector2Int</link> vec2)<computeroutput>[static]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_vector2_int_a1bd4a637f718f5324530a06eeb6648ae_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_vector2_int_1a17576daf4474e5e9c90581dccedfbab0"/><section>
    <title>ManhattanDistance()</title>
<indexterm><primary>ManhattanDistance</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>ManhattanDistance</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">int</link> Vector2Int::ManhattanDistance (<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int">Vector2Int</link> other) const</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_vector2_int_a17576daf4474e5e9c90581dccedfbab0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_vector2_int_1af9b55a021fe82cdee19a5736d0e0478c"/><section>
    <title>Move()</title>
<indexterm><primary>Move</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>Move</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">void</link> Vector2Int::Move (<link linkend="_struct_vector2_int">Vector2Int</link> direction)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_vector2_int_af9b55a021fe82cdee19a5736d0e0478c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_vector2_int_1ab08cdb91427892ffa2854e8d09114cdb"/><section>
    <title>operator+()</title>
<indexterm><primary>operator+</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>operator+</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">Vector2Int::operator</link>+ (<link linkend="_struct_vector2_int">Vector2Int</link> other) const</computeroutput></para></section>
<anchor xml:id="_struct_vector2_int_1a03816fc993bf82130d2941990f9d7ef6"/><section>
    <title>operator-()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>operator-</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">Vector2Int::operator</link>- ( ) const</computeroutput></para></section>
<anchor xml:id="_struct_vector2_int_1af4140f0a21bfd68be482c1b1382b2d0c"/><section>
    <title>operator-()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>operator-</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">Vector2Int::operator</link>- (<link linkend="_struct_vector2_int">Vector2Int</link> other) const</computeroutput></para></section>
<anchor xml:id="_struct_vector2_int_1a805e463e26682c870374fe8c4348bd5b"/><section>
    <title>operator/()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator/</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>operator/</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">Vector2Int::operator</link>/ (<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">int</link> scalar) const</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_vector2_int_a805e463e26682c870374fe8c4348bd5b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_vector2_int_1a3acb9c9c38ec9f7ded2f62d8ca5eb7f0"/><section>
    <title>operator/()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator/</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>operator/</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">Vector2Int::operator</link>/ (<link linkend="_struct_vector2_int">Vector2Int</link> other) const</computeroutput></para></section>
<anchor xml:id="_struct_vector2_int_1a30bceb27193e5742ebbd3bbef61528d0"/><section>
    <title>operator&lt;()</title>
<indexterm><primary>operator&lt;</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">bool</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">Vector2Int::operator</link>&lt; (<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int">Vector2Int</link> other) const</computeroutput></para></section>
<anchor xml:id="_struct_vector2_int_1af948d9748afc6d6288e19ffcef7ef8cf"/><section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">bool</link> <link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">Vector2Int::operator</link>== (<link linkend="_struct_vector2_int">Vector2Int</link> other) const</computeroutput></para></section>
<anchor xml:id="_struct_vector2_int_1a1ff8f0a7dfc5671cde00c238ec1f8132"/><section>
    <title>Sum()</title>
<indexterm><primary>Sum</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>Sum</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int">Vector2Int</link> Vector2Int::Sum (<link linkend="_struct_vector2_int">Vector2Int</link> vec1, <link linkend="_struct_vector2_int">Vector2Int</link> vec2)<computeroutput>[static]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_vector2_int_a1ff8f0a7dfc5671cde00c238ec1f8132_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_vector2_int_1a4f216ccc717da30962930d18f5d7ff60"/><section>
    <title>Directions</title>
<indexterm><primary>Directions</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>Directions</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> std::vector&lt; <link linkend="_struct_vector2_int">Vector2Int</link> &gt; Vector2Int::Directions = { <link linkend="_struct_vector2_int_1a2ee6d471baa7a6ba0e70ae11098491cf">Up</link>, <link linkend="_struct_vector2_int_1a7cac0ab70292eaa33d1aaf634d7c9141">Down</link>, <link linkend="_struct_vector2_int_1a087472c234c9b548ed191ee0d60d22a1">Left</link>, <link linkend="_struct_vector2_int_1a9c96b9c5aab40bf6c06f7d82aa87b3c1">Right</link> }<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_vector2_int_1a7cac0ab70292eaa33d1aaf634d7c9141"/><section>
    <title>Down</title>
<indexterm><primary>Down</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>Down</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int">Vector2Int</link> Vector2Int::Down = { 0, -1 }<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_vector2_int_1a087472c234c9b548ed191ee0d60d22a1"/><section>
    <title>Left</title>
<indexterm><primary>Left</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>Left</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int">Vector2Int</link> Vector2Int::Left = { -1, 0 }<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_vector2_int_1a9c96b9c5aab40bf6c06f7d82aa87b3c1"/><section>
    <title>Right</title>
<indexterm><primary>Right</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>Right</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int">Vector2Int</link> Vector2Int::Right = { 1, 0 }<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_vector2_int_1a2ee6d471baa7a6ba0e70ae11098491cf"/><section>
    <title>Up</title>
<indexterm><primary>Up</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>Up</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int">Vector2Int</link> Vector2Int::Up = { 0, 1 }<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657"/><section>
    <title>x</title>
<indexterm><primary>x</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>x</secondary></indexterm>
<para><computeroutput>int Vector2Int::x</computeroutput></para></section>
<anchor xml:id="_struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839"/><section>
    <title>y</title>
<indexterm><primary>y</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>y</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">int</link> Vector2Int::y</computeroutput></para></section>
<anchor xml:id="_struct_vector2_int_1a47e1fa2c4d20433493421c8e6b393d55"/><section>
    <title>Zero</title>
<indexterm><primary>Zero</primary><secondary>Vector2Int</secondary></indexterm>
<indexterm><primary>Vector2Int</primary><secondary>Zero</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">const</link> <link linkend="_struct_vector2_int">Vector2Int</link> Vector2Int::Zero = { 0, 0 }<computeroutput>[static]</computeroutput></computeroutput></para></section>
<para>
The documentation for this struct was generated from the following files:</para>
src/<link linkend="__vector2_int_8h">Vector2Int.h</link>src/<link linkend="__vector2_int_8cpp">Vector2Int.cpp</link></section>
</section>
