<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_field_object" xml:lang="en-US">
<title>FieldObject Class Reference</title>
<indexterm><primary>FieldObject</primary></indexterm>
<para>
<computeroutput>#include &lt;FieldObject.h&gt;</computeroutput>
</para>
Inheritance diagram for FieldObject:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_field_object__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_class_field_object_1ad3394ff79b118dc7f0528691e3011d7b">Speed</link> () const</para>
</listitem>
            <listitem><para>int <link linkend="_class_field_object_1abc1dd25e64efeee0d38cfa576e631afe">TeamColor</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_field_object_1ae19f014e8b65c48e6c415bc329d72d35">IsMoving</link> () const</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_field_object_1aaa586f785bac3911fef34ad1a8e8bc8e">RemoveOnCollision</link> () const</para>
</listitem>
            <listitem><para>virtual <link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_class_field_object_1a8df15b70caf6bdd4289b576380979cc0">NextDirection</link> ()=0</para>
</listitem>
            <listitem><para>virtual unsigned char <link linkend="_class_field_object_1a024682a0af8b230eb8d3f6458c711149">DisplayChar</link> () const =0</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_class_field_object_1a283da8b74a99d56e2cc969d572572b82">Position</link> () const</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_class_field_object_1aed3d111c199bc4001433f6b84dbb6121">Direction</link> () const</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_class_field_object_1a38ad1607f64d21ef7f047a420a9ddd8b">NextPosition</link> (<link linkend="_struct_vector2_int">Vector2Int</link> dir) const</para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_class_field_object_1a73bf8caa493de4f2bc8b9a501759f11b">PreviousPosition</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_field_object_1adcbf508ca827673eee1b27f1d8284ea8">Move</link> (<link linkend="_struct_vector2_int">Vector2Int</link> dir)</para>
</listitem>
            <listitem><para>void <link linkend="_class_field_object_1a7e008b907c86b1291671c18af4262f30">SetMoving</link> (bool moving)</para>
</listitem>
            <listitem><para>void <link linkend="_class_field_object_1ab7fb48ed59749c9bd778fe200e76c7da">SetPosition</link> (<link linkend="_struct_vector2_int">Vector2Int</link> newPosition)</para>
</listitem>
            <listitem><para>void <link linkend="_class_field_object_1a48ab678688aad7bdabda842ad02f2629">SetDirection</link> (<link linkend="_struct_vector2_int">Vector2Int</link> newDirection)</para>
</listitem>
            <listitem><para>void <link linkend="_class_field_object_1ad9cd890b6147eca773863d4f7e27e8cf">SetCave</link> (std::shared_ptr&lt; std::vector&lt; std::vector&lt; bool &gt; &gt; &gt; field)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_field_object_1a9590a56551a007ab5a008055ad4ee30b">WillCollideWithCave</link> (<link linkend="_struct_vector2_int">Vector2Int</link> dir) const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_field_object_1a74311d749156405632bd895ff11d6b7b">WillGoOutOfBounds</link> (<link linkend="_struct_vector2_int">Vector2Int</link> dir) const</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_class_life">Life</link>        <itemizedlist>
            <listitem><para>virtual float <link linkend="_class_life_1a545ace2d81aac26707d049daab9e4d69">Health</link> () const</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_life_1ac5ca0136764225872a718c1f5c59192f">ChangeHealth</link> (float amount)</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_life_1a38defcd0462b4eceeed9dba20a8cfa20">IsDead</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_life_1a6de2a371f6f778f8b4938d219390b746">Life</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_life_1a3a07ec90f732071602e6a8931383ee66">Life</link> (float <link linkend="_class_life_1a5d1154e1c58d1852527cab42294c576c">startingHealth</link>)</para>
</listitem>
        </itemizedlist>
Public Member Functions inherited from <link linkend="_class_damage">Damage</link>        <itemizedlist>
            <listitem><para>virtual float <link linkend="_class_damage_1a65491171a4728413062baa0cd9c75c9a">GetDamage</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_damage_1af71969c367b1b42febfb6ccf8c2d7785">Damage</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_damage_1ae3e192f0ccc0808c7bba3be3438ff9b6">Damage</link> (float <link linkend="_class_damage_1aec89e5ca3372eb57c76f44dab68330c4">damage</link>)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_field_object_1a70e6e091edc8926e7ef53eeaf909c3ad">FieldObject</link> (int <link linkend="_class_field_object_1ab3445464b7bc65c70b212959765d4504">teamColor</link>, int <link linkend="_class_field_object_1aa182c1f2dbde4353491d10b5b78218cc">speed</link>, <link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_class_field_object_1a171a6bf6a57457e18208ebcf8cb02a9c">position</link>, <link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_class_field_object_1a84b942ec7b6ccef85e0f1d8e9c453932">direction</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_class_field_object_1aa182c1f2dbde4353491d10b5b78218cc">speed</link></para>
</listitem>
            <listitem><para>int <link linkend="_class_field_object_1ab3445464b7bc65c70b212959765d4504">teamColor</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_field_object_1a319ed000306676f7edfe32f562f6f08f">isMoving</link></para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_class_field_object_1a171a6bf6a57457e18208ebcf8cb02a9c">position</link></para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_class_field_object_1a84b942ec7b6ccef85e0f1d8e9c453932">direction</link></para>
</listitem>
            <listitem><para><link linkend="_struct_vector2_int">Vector2Int</link> <link linkend="_class_field_object_1a98387f5c5b27ad8be25e4c8eedf07ca2">previousPosition</link></para>
</listitem>
            <listitem><para>std::shared_ptr&lt; std::vector&lt; std::vector&lt; bool &gt; &gt; &gt; <link linkend="_class_field_object_1abae00928de496ec59b6df92dad27d995">cave</link></para>
</listitem>
        </itemizedlist>
</simplesect>
Protected Attributes inherited from <link linkend="_class_life">Life</link>        <itemizedlist>
            <listitem><para>float <link linkend="_class_life_1a5d1154e1c58d1852527cab42294c576c">startingHealth</link></para>
</listitem>
            <listitem><para>float <link linkend="_class_life_1a85039625ee9c15d4f32019ca1a13b3b7">currentHealth</link></para>
</listitem>
        </itemizedlist>
Protected Attributes inherited from <link linkend="_class_damage">Damage</link>        <itemizedlist>
            <listitem><para>float <link linkend="_class_damage_1aec89e5ca3372eb57c76f44dab68330c4">damage</link> = 0</para>
</listitem>
        </itemizedlist>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_field_object_1a70e6e091edc8926e7ef53eeaf909c3ad"/><section>
    <title>FieldObject()</title>
<indexterm><primary>FieldObject</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>FieldObject</secondary></indexterm>
<para><computeroutput>FieldObject::FieldObject (int teamColor, int speed, <link linkend="_struct_vector2_int">Vector2Int</link> position, <link linkend="_struct_vector2_int">Vector2Int</link> direction)<computeroutput>[protected]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_field_object_1aed3d111c199bc4001433f6b84dbb6121"/><section>
    <title>Direction()</title>
<indexterm><primary>Direction</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>Direction</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int">Vector2Int</link> FieldObject::Direction ( ) const</computeroutput></para></section>
<anchor xml:id="_class_field_object_1a024682a0af8b230eb8d3f6458c711149"/><section>
    <title>DisplayChar()</title>
<indexterm><primary>DisplayChar</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>DisplayChar</secondary></indexterm>
<para><computeroutput>virtual unsigned char FieldObject::DisplayChar ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_projectile_1a1e286e572f904e07720a44d7b3ec800a">Projectile</link>, and <link linkend="_class_soldier_1a201902d239f204af743f5e803725d7eb">Soldier</link>.</para>
</section>
<anchor xml:id="_class_field_object_1ae19f014e8b65c48e6c415bc329d72d35"/><section>
    <title>IsMoving()</title>
<indexterm><primary>IsMoving</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>IsMoving</secondary></indexterm>
<para><computeroutput>bool FieldObject::IsMoving ( ) const</computeroutput></para></section>
<anchor xml:id="_class_field_object_1adcbf508ca827673eee1b27f1d8284ea8"/><section>
    <title>Move()</title>
<indexterm><primary>Move</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>Move</secondary></indexterm>
<para><computeroutput>void FieldObject::Move (<link linkend="_struct_vector2_int">Vector2Int</link> dir)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_field_object_adcbf508ca827673eee1b27f1d8284ea8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_field_object_1a8df15b70caf6bdd4289b576380979cc0"/><section>
    <title>NextDirection()</title>
<indexterm><primary>NextDirection</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>NextDirection</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_struct_vector2_int">Vector2Int</link> FieldObject::NextDirection ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_enemy_1ad87fa2fc1271434d29e72d313b3413b4">Enemy</link>, <link linkend="_class_projectile_1a6006a5d309f6266e1101be1143d5bcb5">Projectile</link>, and <link linkend="_class_soldier_1af8972bd7ba91e2e6ef78b10984371b38">Soldier</link>.</para>
</section>
<anchor xml:id="_class_field_object_1a38ad1607f64d21ef7f047a420a9ddd8b"/><section>
    <title>NextPosition()</title>
<indexterm><primary>NextPosition</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>NextPosition</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int">Vector2Int</link> FieldObject::NextPosition (<link linkend="_struct_vector2_int">Vector2Int</link> dir) const</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_field_object_a38ad1607f64d21ef7f047a420a9ddd8b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_field_object_1a283da8b74a99d56e2cc969d572572b82"/><section>
    <title>Position()</title>
<indexterm><primary>Position</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>Position</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int">Vector2Int</link> FieldObject::Position ( ) const</computeroutput></para></section>
<anchor xml:id="_class_field_object_1a73bf8caa493de4f2bc8b9a501759f11b"/><section>
    <title>PreviousPosition()</title>
<indexterm><primary>PreviousPosition</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>PreviousPosition</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int">Vector2Int</link> FieldObject::PreviousPosition ( ) const</computeroutput></para></section>
<anchor xml:id="_class_field_object_1aaa586f785bac3911fef34ad1a8e8bc8e"/><section>
    <title>RemoveOnCollision()</title>
<indexterm><primary>RemoveOnCollision</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>RemoveOnCollision</secondary></indexterm>
<para><computeroutput>bool FieldObject::RemoveOnCollision ( ) const<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented in <link linkend="_class_projectile_1ad0979cbc097426f338b2edead4c7a04c">Projectile</link>.</para>
</section>
<anchor xml:id="_class_field_object_1ad9cd890b6147eca773863d4f7e27e8cf"/><section>
    <title>SetCave()</title>
<indexterm><primary>SetCave</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>SetCave</secondary></indexterm>
<para><computeroutput>void FieldObject::SetCave (std::shared_ptr&lt; std::vector&lt; std::vector&lt; bool &gt; &gt; &gt; field)</computeroutput></para></section>
<anchor xml:id="_class_field_object_1a48ab678688aad7bdabda842ad02f2629"/><section>
    <title>SetDirection()</title>
<indexterm><primary>SetDirection</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>SetDirection</secondary></indexterm>
<para><computeroutput>void FieldObject::SetDirection (<link linkend="_struct_vector2_int">Vector2Int</link> newDirection)</computeroutput></para></section>
<anchor xml:id="_class_field_object_1a7e008b907c86b1291671c18af4262f30"/><section>
    <title>SetMoving()</title>
<indexterm><primary>SetMoving</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>SetMoving</secondary></indexterm>
<para><computeroutput>void FieldObject::SetMoving (bool moving)</computeroutput></para></section>
<anchor xml:id="_class_field_object_1ab7fb48ed59749c9bd778fe200e76c7da"/><section>
    <title>SetPosition()</title>
<indexterm><primary>SetPosition</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>SetPosition</secondary></indexterm>
<para><computeroutput>void FieldObject::SetPosition (<link linkend="_struct_vector2_int">Vector2Int</link> newPosition)</computeroutput></para></section>
<anchor xml:id="_class_field_object_1ad3394ff79b118dc7f0528691e3011d7b"/><section>
    <title>Speed()</title>
<indexterm><primary>Speed</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>Speed</secondary></indexterm>
<para><computeroutput>int FieldObject::Speed ( ) const</computeroutput></para></section>
<anchor xml:id="_class_field_object_1abc1dd25e64efeee0d38cfa576e631afe"/><section>
    <title>TeamColor()</title>
<indexterm><primary>TeamColor</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>TeamColor</secondary></indexterm>
<para><computeroutput>int FieldObject::TeamColor ( ) const</computeroutput></para></section>
<anchor xml:id="_class_field_object_1a9590a56551a007ab5a008055ad4ee30b"/><section>
    <title>WillCollideWithCave()</title>
<indexterm><primary>WillCollideWithCave</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>WillCollideWithCave</secondary></indexterm>
<para><computeroutput>bool FieldObject::WillCollideWithCave (<link linkend="_struct_vector2_int">Vector2Int</link> dir) const</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_field_object_a9590a56551a007ab5a008055ad4ee30b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_field_object_a9590a56551a007ab5a008055ad4ee30b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_field_object_1a74311d749156405632bd895ff11d6b7b"/><section>
    <title>WillGoOutOfBounds()</title>
<indexterm><primary>WillGoOutOfBounds</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>WillGoOutOfBounds</secondary></indexterm>
<para><computeroutput>bool FieldObject::WillGoOutOfBounds (<link linkend="_struct_vector2_int">Vector2Int</link> dir) const</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_field_object_a74311d749156405632bd895ff11d6b7b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_field_object_1abae00928de496ec59b6df92dad27d995"/><section>
    <title>cave</title>
<indexterm><primary>cave</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>cave</secondary></indexterm>
<para><computeroutput>std::shared_ptr&lt;std::vector&lt;std::vector&lt;bool&gt; &gt; &gt; FieldObject::cave<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_field_object_1a84b942ec7b6ccef85e0f1d8e9c453932"/><section>
    <title>direction</title>
<indexterm><primary>direction</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>direction</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int">Vector2Int</link> FieldObject::direction<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_field_object_1a319ed000306676f7edfe32f562f6f08f"/><section>
    <title>isMoving</title>
<indexterm><primary>isMoving</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>isMoving</secondary></indexterm>
<para><computeroutput>bool FieldObject::isMoving<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_field_object_1a171a6bf6a57457e18208ebcf8cb02a9c"/><section>
    <title>position</title>
<indexterm><primary>position</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>position</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int">Vector2Int</link> FieldObject::position<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_field_object_1a98387f5c5b27ad8be25e4c8eedf07ca2"/><section>
    <title>previousPosition</title>
<indexterm><primary>previousPosition</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>previousPosition</secondary></indexterm>
<para><computeroutput><link linkend="_struct_vector2_int">Vector2Int</link> FieldObject::previousPosition<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_field_object_1aa182c1f2dbde4353491d10b5b78218cc"/><section>
    <title>speed</title>
<indexterm><primary>speed</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>speed</secondary></indexterm>
<para><computeroutput>int FieldObject::speed<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_field_object_1ab3445464b7bc65c70b212959765d4504"/><section>
    <title>teamColor</title>
<indexterm><primary>teamColor</primary><secondary>FieldObject</secondary></indexterm>
<indexterm><primary>FieldObject</primary><secondary>teamColor</secondary></indexterm>
<para><computeroutput>int FieldObject::teamColor<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
src/<link linkend="__field_object_8h">FieldObject.h</link>src/<link linkend="__field_object_8cpp">FieldObject.cpp</link></section>
</section>
