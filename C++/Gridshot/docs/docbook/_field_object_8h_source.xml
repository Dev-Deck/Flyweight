<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__field_object_8h_source" xml:lang="en-US">
<title>FieldObject.h</title>
<indexterm><primary>src/FieldObject.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&lt;map&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;memory&gt;</emphasis>
6 
7 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__life_8h">Life.h</link>&quot;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__colors_8h">Colors.h</link>&quot;</emphasis>
9 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__damage_8h">Damage.h</link>&quot;</emphasis>
10 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__vector2_int_8h">Vector2Int.h</link>&quot;</emphasis>
11 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_field_object">FieldObject</link>&#32;:&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_life">Life</link>,&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_damage">Damage</link>
12 
13 {
14 <emphasis role="keyword">protected</emphasis>:
15 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_field_object_1aa182c1f2dbde4353491d10b5b78218cc">speed</link>;
16 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_field_object_1ab3445464b7bc65c70b212959765d4504">teamColor</link>;
17 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_field_object_1a319ed000306676f7edfe32f562f6f08f">isMoving</link>;
18 
19 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_class_field_object_1a171a6bf6a57457e18208ebcf8cb02a9c">position</link>;
20 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_class_field_object_1a84b942ec7b6ccef85e0f1d8e9c453932">direction</link>;
21 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_class_field_object_1a98387f5c5b27ad8be25e4c8eedf07ca2">previousPosition</link>;
22 &#32;&#32;&#32;&#32;std::shared_ptr&lt;std::vector&lt;std::vector&lt;bool&gt;&gt;&gt;&#32;<link linkend="_class_field_object_1abae00928de496ec59b6df92dad27d995">cave</link>;
23 
24 &#32;&#32;&#32;&#32;<link linkend="_class_field_object_1a70e6e091edc8926e7ef53eeaf909c3ad">FieldObject</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_field_object_1ab3445464b7bc65c70b212959765d4504">teamColor</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_field_object_1aa182c1f2dbde4353491d10b5b78218cc">speed</link>,&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_class_field_object_1a171a6bf6a57457e18208ebcf8cb02a9c">position</link>,&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_class_field_object_1a84b942ec7b6ccef85e0f1d8e9c453932">direction</link>);
25 
26 <emphasis role="keyword">public</emphasis>:
27 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_field_object_1ad3394ff79b118dc7f0528691e3011d7b">Speed</link>()&#32;<emphasis role="keyword">const</emphasis>;
28 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_field_object_1abc1dd25e64efeee0d38cfa576e631afe">TeamColor</link>()&#32;<emphasis role="keyword">const</emphasis>;
29 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_field_object_1ae19f014e8b65c48e6c415bc329d72d35">IsMoving</link>()&#32;<emphasis role="keyword">const</emphasis>;
30 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_field_object_1aaa586f785bac3911fef34ad1a8e8bc8e">RemoveOnCollision</link>()&#32;<emphasis role="keyword">const</emphasis>;
31 
32 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_class_field_object_1a8df15b70caf6bdd4289b576380979cc0">NextDirection</link>()&#32;=&#32;0;
33 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_class_field_object_1a024682a0af8b230eb8d3f6458c711149">DisplayChar</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;=&#32;0;
34 
35 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_class_field_object_1a283da8b74a99d56e2cc969d572572b82">Position</link>()&#32;<emphasis role="keyword">const</emphasis>;
36 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_class_field_object_1aed3d111c199bc4001433f6b84dbb6121">Direction</link>()&#32;<emphasis role="keyword">const</emphasis>;
37 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_class_field_object_1a38ad1607f64d21ef7f047a420a9ddd8b">NextPosition</link>(<link linkend="_struct_vector2_int">Vector2Int</link>&#32;dir)&#32;<emphasis role="keyword">const</emphasis>;
38 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_class_field_object_1a73bf8caa493de4f2bc8b9a501759f11b">PreviousPosition</link>()&#32;<emphasis role="keyword">const</emphasis>;
39 
40 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_field_object_1adcbf508ca827673eee1b27f1d8284ea8">Move</link>(<link linkend="_struct_vector2_int">Vector2Int</link>&#32;dir);
41 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_field_object_1a7e008b907c86b1291671c18af4262f30">SetMoving</link>(<emphasis role="keywordtype">bool</emphasis>&#32;moving);
42 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_field_object_1ab7fb48ed59749c9bd778fe200e76c7da">SetPosition</link>(<link linkend="_struct_vector2_int">Vector2Int</link>&#32;newPosition);
43 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_field_object_1a48ab678688aad7bdabda842ad02f2629">SetDirection</link>(<link linkend="_struct_vector2_int">Vector2Int</link>&#32;newDirection);
44 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_field_object_1ad9cd890b6147eca773863d4f7e27e8cf">SetCave</link>(std::shared_ptr&lt;std::vector&lt;std::vector&lt;bool&gt;&gt;&gt;&#32;field);
45 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_field_object_1a9590a56551a007ab5a008055ad4ee30b">WillCollideWithCave</link>(<link linkend="_struct_vector2_int">Vector2Int</link>&#32;dir)&#32;<emphasis role="keyword">const</emphasis>;
46 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_field_object_1a74311d749156405632bd895ff11d6b7b">WillGoOutOfBounds</link>(<link linkend="_struct_vector2_int">Vector2Int</link>&#32;dir)&#32;<emphasis role="keyword">const</emphasis>;
47 };
</programlisting></section>
