<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__vector2_int_8h_source" xml:lang="en-US">
<title>Vector2Int.h</title>
<indexterm><primary>src/Vector2Int.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;stdexcept&gt;</emphasis>
5 
6 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_vector2_int">Vector2Int</link>
7 {
8 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">x</link>;
9 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839">y</link>;
10 
11 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int_1a56b72e4031645f00febf334adce5a77d">Vector2Int</link>();
12 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int_1a56b72e4031645f00febf334adce5a77d">Vector2Int</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">x</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_vector2_int_1a2ac5bfc7ded6a4c62ce3b1d5e4945839">y</link>);
13 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_vector2_int_1af9b55a021fe82cdee19a5736d0e0478c">Move</link>(<link linkend="_struct_vector2_int">Vector2Int</link>&#32;direction);
14 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1a1ff8f0a7dfc5671cde00c238ec1f8132">Sum</link>(<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">vec1</link>,&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">vec2</link>);
15 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_vector2_int_1a1bd4a637f718f5324530a06eeb6648ae">Distance</link>(<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">vec1</link>,&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">vec2</link>);
16 
17 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vector2_int_1a2ee6d471baa7a6ba0e70ae11098491cf">Up</link>;
18 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vector2_int_1a7cac0ab70292eaa33d1aaf634d7c9141">Down</link>;
19 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vector2_int_1a087472c234c9b548ed191ee0d60d22a1">Left</link>;
20 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vector2_int_1a9c96b9c5aab40bf6c06f7d82aa87b3c1">Right</link>;
21 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vector2_int_1a47e1fa2c4d20433493421c8e6b393d55">Zero</link>;
22 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;std::vector&lt;Vector2Int&gt;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vector2_int_1a4f216ccc717da30962930d18f5d7ff60">Directions</link>;
23 
24 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1a03816fc993bf82130d2941990f9d7ef6">operator-</link>()&#32;<emphasis role="keyword">const</emphasis>;
25 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1a03816fc993bf82130d2941990f9d7ef6">operator-</link>(<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">other</link>)&#32;<emphasis role="keyword">const</emphasis>;
26 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1a805e463e26682c870374fe8c4348bd5b">operator/</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">scalar</link>)&#32;<emphasis role="keyword">const</emphasis>;
27 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1ab08cdb91427892ffa2854e8d09114cdb">operator+</link>(<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">other</link>)&#32;<emphasis role="keyword">const</emphasis>;
28 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1a805e463e26682c870374fe8c4348bd5b">operator/</link>(<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">other</link>)&#32;<emphasis role="keyword">const</emphasis>;
29 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_vector2_int_1af948d9748afc6d6288e19ffcef7ef8cf">operator==</link>(<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">other</link>)&#32;<emphasis role="keyword">const</emphasis>;
30 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_vector2_int_1a30bceb27193e5742ebbd3bbef61528d0">operator&lt;</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">other</link>)&#32;<emphasis role="keyword">const</emphasis>;
31 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_vector2_int_1a17576daf4474e5e9c90581dccedfbab0">ManhattanDistance</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_struct_vector2_int_1ad870656d517f78dd1cb577e1ab29d657">other</link>)&#32;<emphasis role="keyword">const</emphasis>;
32 };
33 
34 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_vector2_int_hash">Vector2IntHash</link>&#32;{
35 &#32;&#32;&#32;&#32;std::size_t&#32;<link linkend="_struct_vector2_int_hash_1a76f74e97ef8299ca9c0d49dfed0b5ba4">operator()</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&amp;&#32;v)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>;
36 };
</programlisting></section>
