<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__cave_generator_8h_source" xml:lang="en-US">
<title>CaveGenerator.h</title>
<indexterm><primary>src/CaveGenerator.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&lt;ctime&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;memory&gt;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;cstdlib&gt;</emphasis>
7 
8 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__vector2_int_8h">Vector2Int.h</link>&quot;</emphasis>
9 
10 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_cave_generator">CaveGenerator</link>
11 {
12 <emphasis role="keyword">private</emphasis>:
13 &#32;&#32;&#32;&#32;std::shared_ptr&lt;std::vector&lt;std::vector&lt;bool&gt;&gt;&gt;&#32;cave;
14 
15 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;fillProbability;
16 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;size;
17 &#32;&#32;&#32;&#32;std::vector&lt;Vector2Int&gt;&#32;emptySpaces;
18 
19 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;CaveIteration();
20 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;GenerateInitialCave();
21 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;CountSolidNeighbors(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;y)&#32;<emphasis role="keyword">const</emphasis>;
22 
23 <emphasis role="keyword">public</emphasis>:
24 &#32;&#32;&#32;&#32;<link linkend="_class_cave_generator_1a60055189325dc20fb431602ad00dcca2">CaveGenerator</link>(<link linkend="_struct_vector2_int">Vector2Int</link>&#32;size,&#32;<emphasis role="keywordtype">float</emphasis>&#32;fillProbability);
25 
26 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_cave_generator_1a9c0e8ee97f7cd1aea6045d765e20f7a8">GenerateCave</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;iterations,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vector2_int">Vector2Int</link>*&#32;size,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>*&#32;fillProbability);
27 
28 &#32;&#32;&#32;&#32;std::shared_ptr&lt;std::vector&lt;std::vector&lt;bool&gt;&gt;&gt;&#32;<link linkend="_class_cave_generator_1a23b75da31cea10356121e1d8bd74361d">GetCave</link>()&#32;<emphasis role="keyword">const</emphasis>;
29 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_class_cave_generator_1adbb1a2d432e9826ce817a2d5d44eb72d">GetSize</link>()&#32;<emphasis role="keyword">const</emphasis>;
30 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_cave_generator_1a0473c07481e181db71a9f98946130bb1">GetEmptySpaces</link>()&#32;<emphasis role="keyword">const</emphasis>;
31 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_class_cave_generator_1a5f8ada5348f66c031890f058657ce439">GetRandomEmptySpace</link>();
32 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_class_cave_generator_1a5f9b37566f09c125e37f9ee83012b743">GetEnemySpace</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;fromPosition,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;minDistance);
33 &#32;&#32;&#32;&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;<link linkend="_class_cave_generator_1a4692bbcd7cdef1c41c06f00a65f2bdb6">GetRandomDistantEmptySpace</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_vector2_int">Vector2Int</link>&#32;fromPosition,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;minDistance);
34 };
</programlisting></section>
